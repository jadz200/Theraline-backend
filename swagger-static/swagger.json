{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_healthcheck",
        "summary": "Health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Hello World"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Main"
        ]
      }
    },
    "/doctor": {
      "get": {
        "operationId": "AppController_doctor",
        "summary": "Checking doctor permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Hello doctors"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Main"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patient": {
      "get": {
        "operationId": "AppController_patient",
        "summary": "Checking patient permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Hello patient"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Main"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signupLocal",
        "summary": "Create patient user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "string"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "AuthController_signinLocal",
        "summary": "Sign in and get access and refresh tokens",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthDto"
              },
              "examples": {
                "patient": {
                  "value": {
                    "email": "new@gmail.com",
                    "password": "string"
                  },
                  "summary": "Patient login"
                },
                "doctor": {
                  "value": {
                    "email": "doctor@gmail.com",
                    "password": "string"
                  },
                  "summary": "Doctor login"
                },
                "expotoken": {
                  "value": {
                    "email": "doctor@gmail.com",
                    "password": "string",
                    "expoToken": "string"
                  },
                  "summary": "Login expo Token example"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDto"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "examples": {
                  "Incorrect_Password": {
                    "value": {
                      "statusCode": 400,
                      "message": "Incorrect password",
                      "error": "Bad Request"
                    }
                  },
                  "No_User_with_email": {
                    "value": {
                      "statusCode": 400,
                      "message": "No user with current email adress",
                      "error": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshTokens",
        "summary": "Use Refresh token",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "header",
            "description": "The refresh token to use for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_retrieveUserInfo",
        "summary": "Use Access token get user info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "email": "string@email.com",
                    "firstName": "string",
                    "lastName": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/groups/create_convo": {
      "post": {
        "operationId": "GroupsController_create_convo",
        "summary": "Create personal conversation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConvoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created convo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/groups/create_group": {
      "post": {
        "operationId": "GroupsController_create_group",
        "summary": "Create group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created Group"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/groups/get_chats": {
      "get": {
        "operationId": "GroupsController_get_all_chats",
        "summary": "Get all groups for a user",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/message/{chat_id}/chat": {
      "get": {
        "operationId": "MessageController_get_chat",
        "parameters": [
          {
            "name": "chat_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Message"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/message/{chat_id}/sendMessage": {
      "post": {
        "operationId": "MessageController_send_chat_message",
        "parameters": [
          {
            "name": "chat_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Message"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/create_appointment": {
      "post": {
        "operationId": "AppointementController_create_appointment",
        "summary": "Doctor creates appointment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              },
              "examples": {
                "example1": {
                  "value": {
                    "title": "Cool appointment",
                    "patient_id": "1234",
                    "start_date": "2023-11-07T12:30:00",
                    "end_date": "2023-11-07T13:30:00",
                    "paymentInfo": {
                      "amount": 100,
                      "status": "Paid",
                      "method": "Credit Card",
                      "date": "2023-03-18T16:00:00"
                    }
                  },
                  "summary": "An example appointment request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/{appointment_id}/confirm_appointment": {
      "patch": {
        "operationId": "AppointementController_confirm_appointment",
        "summary": "Patient confirm appoinment",
        "parameters": [
          {
            "name": "appointment_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/{appointment_id}/cancel_appointment": {
      "patch": {
        "operationId": "AppointementController_cancel_appointment",
        "summary": "Patient/Doctor cancel the appoinment",
        "parameters": [
          {
            "name": "appointment_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/doctor/appointment": {
      "get": {
        "operationId": "AppointementController_get_doctor_appointment",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/{appointment_id}/complete_appointment": {
      "patch": {
        "operationId": "AppointementController_complete_appointment",
        "summary": "Marks the appointment completed and adds Payment Info",
        "parameters": [
          {
            "name": "appointment_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/paymentInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/appointment/get_payment_info": {
      "get": {
        "operationId": "AppointementController_get_paymentInfo",
        "summary": "Gets Payment Info for a doctor",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/create_doctor": {
      "post": {
        "operationId": "UserController_create_doctor",
        "summary": "Creates a doctor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created Doctor Account"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Acees",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/clinicInfo": {
      "get": {
        "operationId": "UserController_get_clinicInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/patient-list": {
      "get": {
        "operationId": "UserController_getPatientList",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/delete/{user_id}/user": {
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Theraline endpoints",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "expoToken": {
            "type": "string"
          },
          "birthday": {
            "type": "object"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "image",
          "phone",
          "gender",
          "expoToken",
          "birthday"
        ]
      },
      "AuthDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "expoToken": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "expoToken"
        ]
      },
      "TokenDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "role"
        ]
      },
      "CreateConvoDto": {
        "type": "object",
        "properties": {
          "users_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "users_id"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "users_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "users_id",
          "name",
          "image"
        ]
      },
      "SendMessageDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "paymentInfoDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "method": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "object"
          }
        },
        "required": [
          "amount",
          "status",
          "method",
          "date"
        ]
      },
      "CreateAppointmentDto": {
        "type": "object",
        "properties": {
          "patient_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/paymentInfoDto"
          }
        },
        "required": [
          "patient_id",
          "title",
          "start_date",
          "end_date",
          "paymentInfo"
        ]
      },
      "ClinicInfoDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "phone",
          "location",
          "name"
        ]
      },
      "CreateDoctorDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "clinicInfo": {
            "$ref": "#/components/schemas/ClinicInfoDto"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "image",
          "clinicInfo"
        ]
      }
    }
  }
}